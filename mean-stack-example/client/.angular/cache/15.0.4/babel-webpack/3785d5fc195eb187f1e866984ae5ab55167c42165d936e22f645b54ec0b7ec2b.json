{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StationService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://localhost:5200';\n    this.Stations$ = new Subject();\n  }\n  refreshStations() {\n    this.httpClient.get(`${this.url}/stations`).subscribe(Stations => {\n      this.Stations$.next(Stations);\n    });\n  }\n  getStations() {\n    this.refreshStations();\n    return this.Stations$;\n  }\n}\nStationService.ɵfac = function StationService_Factory(t) {\n  return new (t || StationService)(i0.ɵɵinject(i1.HttpClient));\n};\nStationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StationService,\n  factory: StationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,OAAO,QAAa,MAAM;;;AAM/C,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAHtB,QAAG,GAAG,uBAAuB;IAC7B,cAAS,GAAuB,IAAIH,OAAO,EAAE;EAEP;EAEtCI,eAAe;IACrB,IAAI,CAACD,UAAU,CAACE,GAAG,CAAY,GAAG,IAAI,CAACC,GAAG,WAAW,CAAC,CACnDC,SAAS,CAACC,QAAQ,IAAG;MACpB,IAAI,CAACC,SAAS,CAACC,IAAI,CAACF,QAAQ,CAAC;IAC/B,CAAC,CAAC;EACN;EAEAG,WAAW;IACT,IAAI,CAACP,eAAe,EAAE;IACtB,OAAO,IAAI,CAACK,SAAS;EACvB;;AAhBWR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAW,SAAdX,cAAc;EAAAY,YAFb;AAAM","names":["Subject","StationService","constructor","httpClient","refreshStations","get","url","subscribe","Stations","Stations$","next","getStations","factory","providedIn"],"sourceRoot":"","sources":["D:\\KASUN\\NSBM 3rd Year\\FullStackDev\\mean\\mean-stack-example\\client\\src\\app\\station.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject, tap } from 'rxjs';\nimport { Station } from './station';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StationService {\n  private url = 'http://localhost:5200';\n  private Stations$: Subject<Station[]> = new Subject();\n\n  constructor(private httpClient: HttpClient) { }\n\n  private refreshStations() {\n    this.httpClient.get<Station[]>(`${this.url}/stations`)\n      .subscribe(Stations => {\n        this.Stations$.next(Stations);\n      });\n  }\n\n  getStations(): Subject<Station[]> {\n    this.refreshStations();\n    return this.Stations$;\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}