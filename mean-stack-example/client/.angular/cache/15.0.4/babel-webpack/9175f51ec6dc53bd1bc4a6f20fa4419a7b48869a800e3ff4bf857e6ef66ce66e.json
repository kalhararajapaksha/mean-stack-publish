{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../station.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ReservationFormComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const station_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", station_r1._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(station_r1.name);\n  }\n}\nexport class ReservationFormComponent {\n  // <option *ngFor=\"let station of stations$ | async\" [value]=\"station._id\">{{station.name}}</option>\n  constructor(stationService) {\n    this.stationService = stationService;\n    this.stations$ = new Observable();\n  }\n  ngOnInit() {\n    this.fetchStations();\n  }\n  fetchStations() {\n    this.stations$ = this.stationService.getStations();\n    console.log(this.stations$);\n  }\n}\nReservationFormComponent.ɵfac = function ReservationFormComponent_Factory(t) {\n  return new (t || ReservationFormComponent)(i0.ɵɵdirectiveInject(i1.StationService));\n};\nReservationFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReservationFormComponent,\n  selectors: [[\"app-reservation-form\"]],\n  decls: 22,\n  vars: 3,\n  consts: [[1, \"form-group\"], [\"for\", \"from\"], [\"id\", \"from\", \"name\", \"from\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"date\"], [\"type\", \"date\", \"id\", \"date\", \"name\", \"date\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"card\"], [\"src\", \"\", \"alt\", \"\", 1, \"card-img-top\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [\"href\", \"#\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"value\"]],\n  template: function ReservationFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Destination:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"select\", 2);\n      i0.ɵɵtemplate(5, ReservationFormComponent_option_5_Template, 2, 2, \"option\", 3);\n      i0.ɵɵpipe(6, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 0)(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 6);\n      i0.ɵɵtext(12, \"Search\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 7);\n      i0.ɵɵelement(14, \"img\", 8);\n      i0.ɵɵelementStart(15, \"div\", 9);\n      i0.ɵɵelement(16, \"h5\", 10)(17, \"p\", 11);\n      i0.ɵɵelementStart(18, \"p\", 11);\n      i0.ɵɵtext(19, \"Price: 10000\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"a\", 12);\n      i0.ɵɵlistener(\"click\", function ReservationFormComponent_Template_a_click_20_listener() {\n        return ctx.viewDetails(ctx.food);\n      });\n      i0.ɵɵtext(21, \"View Details\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(6, 1, ctx.stations$));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.NgControlStatusGroup, i2.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAQ,MAAM;;;;;;;IAY7BC,kCAAwE;IAAAA,YAAgB;IAAAA,iBAAS;;;;IAA/CA,sCAAqB;IAACA,eAAgB;IAAhBA,qCAAgB;;;AAsB5F,OAAM,MAAOC,wBAAwB;EAGpC;EACCC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAFlC,cAAS,GAA0B,IAAIJ,UAAU,EAAE;EAEG;EAEtDK,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAIQA,aAAa;IACnB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,cAAc,CAACI,WAAW,EAAE;IAClDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,SAAS,CAAC;EAC7B;;AAfWL,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MA1BnCd,4BAAM;MAEcA,4BAAY;MAAAA,iBAAQ;MACtCA,iCAAoD;MACpDA,+EAAiG;;MACjGA,iBAAS;MAEXA,8BAAwB;MACJA,qBAAK;MAAAA,iBAAQ;MAC/BA,4BAA+D;MACjEA,iBAAM;MACNA,kCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;MAE/DA,+BAAkB;MAChBA,0BAAwC;MACxCA,+BAAuB;MACrBA,0BAA4B;MAE5BA,8BAAqB;MAAAA,6BAAY;MAAAA,iBAAI;MACrCA,8BAAgE;MAA5BA;QAAA,OAASe,yBAAiB;MAAA,EAAC;MAACf,6BAAY;MAAAA,iBAAI;;;MAfpDA,eAAoB;MAApBA,6DAAoB","names":["Observable","i0","ReservationFormComponent","constructor","stationService","ngOnInit","fetchStations","stations$","getStations","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\KASUN\\NSBM 3rd Year\\FullStackDev\\mean\\mean-stack-example\\client\\src\\app\\reservation-form\\reservation-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { Station } from '../station';\nimport { StationService } from '../station.service';\n\n\n@Component({\n  selector: 'app-reservation-form',\n  template: `\n  <form>\n  <div class=\"form-group\">\n    <label for=\"from\">Destination:</label>\n    <select class=\"form-control\" id=\"from\"  name=\"from\">\n    <option *ngFor=\"let station of stations$ | async\" [value]=\"station._id\">{{station.name}}</option>\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"date\">Date:</label>\n    <input type=\"date\" class=\"form-control\" id=\"date\"  name=\"date\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Search</button>\n</form>\n<div class=\"card\">\n  <img src=\"\" alt=\"\" class=\"card-img-top\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\"></h5>\n    <p class=\"card-text\"></p>\n    <p class=\"card-text\">Price: 10000</p>\n    <a href=\"#\" class=\"btn btn-primary\" (click)=\"viewDetails(food)\">View Details</a>\n  </div>\n</div>\n  `,\n  styles: [\n  ]\n})\nexport class ReservationFormComponent implements OnInit {\n  \n  stations$: Observable<Station[]> = new Observable();\n // <option *ngFor=\"let station of stations$ | async\" [value]=\"station._id\">{{station.name}}</option>\n  constructor(private stationService: StationService) { }\n  \n  ngOnInit(): void {\n    this.fetchStations();\n  }\n  \n\n  \n  private fetchStations(): void {\n    this.stations$ = this.stationService.getStations();\n    console.log(this.stations$);\n  }\n\n//   <div class=\"form-group\">\n//   <label for=\"time\">Time:</label>\n//   <input type=\"time\" class=\"form-control\" id=\"time\"  name=\"time\">\n// </div>\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}