{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = [\"canvas\"];\nexport class CanvasComponent {\n  constructor() {\n    this.isDrawing = false;\n    this.lastX = 0;\n    this.lastY = 0;\n    this.color = 'red';\n  }\n  ngAfterViewInit() {\n    if (this.canvas) {\n      this.ctx = this.canvas.nativeElement.getContext('2d');\n      this.canvas.nativeElement.width = this.canvas.nativeElement.offsetWidth;\n      this.canvas.nativeElement.height = this.canvas.nativeElement.offsetHeight;\n    }\n  }\n  startDrawing(event) {\n    this.isDrawing = true;\n    this.lastX = event.clientX;\n    this.lastY = event.clientY;\n    console.log(\"start drawing\");\n  }\n  draw(event) {\n    if (!this.isDrawing) {\n      return;\n    }\n    if (this.ctx) {\n      console.log(\" drawing\");\n      this.ctx.strokeStyle = this.color;\n      this.ctx.fillStyle = this.color;\n      this.ctx.lineWidth = 13;\n      this.ctx.beginPath();\n      console.log(this.lastX + \",\" + this.lastY);\n      this.ctx.moveTo(this.lastX, this.lastY);\n      this.ctx.lineTo(event.clientX, event.clientY);\n      this.ctx.stroke();\n    }\n    this.lastX = event.clientX;\n    this.lastY = event.clientY;\n  }\n  stopDrawing() {\n    console.log(\"stop drawing\");\n    this.isDrawing = false;\n  }\n}\nCanvasComponent.ɵfac = function CanvasComponent_Factory(t) {\n  return new (t || CanvasComponent)();\n};\nCanvasComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CanvasComponent,\n  selectors: [[\"app-canvas\"]],\n  viewQuery: function CanvasComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n    }\n  },\n  decls: 2,\n  vars: 0,\n  consts: [[\"id\", \"drawing-canvas\", 1, \"canvas-border\", 3, \"mousedown\", \"mousemove\", \"mouseup\"], [\"canvas\", \"\"]],\n  template: function CanvasComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"canvas\", 0, 1);\n      i0.ɵɵlistener(\"mousedown\", function CanvasComponent_Template_canvas_mousedown_0_listener($event) {\n        return ctx.startDrawing($event);\n      })(\"mousemove\", function CanvasComponent_Template_canvas_mousemove_0_listener($event) {\n        return ctx.draw($event);\n      })(\"mouseup\", function CanvasComponent_Template_canvas_mouseup_0_listener() {\n        return ctx.stopDrawing();\n      });\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 15:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(4:5) D:\\\\\\\\KASUN\\\\\\\\NSBM 3rd Year\\\\\\\\FullStackDev\\\\\\\\mean\\\\\\\\mean-stack-example\\\\\\\\client\\\\\\\\src\\\\\\\\app\\\\\\\\canvas\\\\\\\\canvas.component.ts Unknown word\\\\n\\\\n \\\\u001b[90m 2 | \\\\u001b[39m    border\\\\u001b[33m:\\\\u001b[39m 1px solid black\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 3 | \\\\u001b[39m    color\\\\u001b[33m:\\\\u001b[39m red !important\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 4 | \\\\u001b[39m    wi\\\\n \\\\u001b[90m   | \\\\u001b[39m    \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 5 | \\\\u001b[39m  \\\\u001b[33m}\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n \\t\\n \\t//[_ngcontent-%COMP%]   startup[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n \\t__webpack_modules__[15]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=canvas.component.ts-angular-inline--18.css.map*/\"]\n});","map":{"version":3,"mappings":";;AAeA,OAAM,MAAOA,eAAe;EAb5BC;IAgBU,cAAS,GAAG,KAAK;IACjB,UAAK,GAAG,CAAC;IACT,UAAK,GAAG,CAAC;IACjB,UAAK,GAAG,KAAK;;EACbC,eAAe;IACb,IAAG,IAAI,CAACC,MAAM,EAAE;MACd,IAAI,CAACC,GAAG,GAAG,IAAI,CAACD,MAAM,CAACE,aAAa,CAACC,UAAU,CAAC,IAAI,CAAC;MACrD,IAAI,CAACH,MAAM,CAACE,aAAa,CAACE,KAAK,GAAG,IAAI,CAACJ,MAAM,CAACE,aAAa,CAACG,WAAW;MACvE,IAAI,CAACL,MAAM,CAACE,aAAa,CAACI,MAAM,GAAG,IAAI,CAACN,MAAM,CAACE,aAAa,CAACK,YAAY;;EAG7E;EAEAC,YAAY,CAACC,KAAiB;IAC5B,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,KAAK,GAAGF,KAAK,CAACG,OAAO;IAC1B,IAAI,CAACC,KAAK,GAAGJ,KAAK,CAACK,OAAO;IAC1BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC9B;EAEAC,IAAI,CAACR,KAAiB;IAEpB,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;MACnB;;IAEF,IAAG,IAAI,CAACT,GAAG,EAAC;MACVc,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvB,IAAI,CAACf,GAAG,CAACiB,WAAW,GAAG,IAAI,CAACC,KAAK;MACjC,IAAI,CAAClB,GAAG,CAACmB,SAAS,GAAC,IAAI,CAACD,KAAK;MAC7B,IAAI,CAAClB,GAAG,CAACoB,SAAS,GAAG,EAAE;MACvB,IAAI,CAACpB,GAAG,CAACqB,SAAS,EAAE;MACpBP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,KAAK,GAAC,GAAG,GAAC,IAAI,CAACE,KAAK,CAAC;MACtC,IAAI,CAACZ,GAAG,CAACsB,MAAM,CAAC,IAAI,CAACZ,KAAK,EAAE,IAAI,CAACE,KAAK,CAAC;MACvC,IAAI,CAACZ,GAAG,CAACuB,MAAM,CAACf,KAAK,CAACG,OAAO,EAAEH,KAAK,CAACK,OAAO,CAAC;MAC7C,IAAI,CAACb,GAAG,CAACwB,MAAM,EAAE;;IAEnB,IAAI,CAACd,KAAK,GAAGF,KAAK,CAACG,OAAO;IAC1B,IAAI,CAACC,KAAK,GAAGJ,KAAK,CAACK,OAAO;EAC5B;EAEAY,WAAW;IACTX,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,IAAI,CAACN,SAAS,GAAG,KAAK;EACxB;;AA9CWb,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAA8B;EAAAC;IAAA;;;;;;;;;;;;;MAT1BC,oCAAkJ;MAAxFA;QAAA,OAAa5B,wBAAoB;MAAA,EAAC;QAAA,OAAcA,gBAAY;MAAA,EAA1B;QAAA,OAAuCA,iBAAa;MAAA,EAApD;MAAsD4B,iBAAS","names":["CanvasComponent","constructor","ngAfterViewInit","canvas","ctx","nativeElement","getContext","width","offsetWidth","height","offsetHeight","startDrawing","event","isDrawing","lastX","clientX","lastY","clientY","console","log","draw","strokeStyle","color","fillStyle","lineWidth","beginPath","moveTo","lineTo","stroke","stopDrawing","selectors","viewQuery","i0"],"sourceRoot":"","sources":["D:\\KASUN\\NSBM 3rd Year\\FullStackDev\\mean\\mean-stack-example\\client\\src\\app\\canvas\\canvas.component.ts"],"sourcesContent":["import { Component, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-canvas',\n  template: `\n\n  <canvas #canvas id=\"drawing-canvas\" class=\"canvas-border\" (mousedown)=\"startDrawing($event)\" (mousemove)=\"draw($event)\" (mouseup)=\"stopDrawing()\"></canvas>\n  `,\n  styles: [`.canvas-border {\n    border: 1px solid black;\n    color: red !important;\n    wi\n  }`\n  ]\n})\nexport class CanvasComponent {\n  @ViewChild('canvas', { static: true }) canvas?: ElementRef;\n  private ctx?: CanvasRenderingContext2D;\n  private isDrawing = false;\n  private lastX = 0;\n  private lastY = 0;\n  color = 'red';\n  ngAfterViewInit() {\n    if(this.canvas) {\n      this.ctx = this.canvas.nativeElement.getContext('2d');\n      this.canvas.nativeElement.width = this.canvas.nativeElement.offsetWidth;\n      this.canvas.nativeElement.height = this.canvas.nativeElement.offsetHeight;\n      \n  }\n  }\n\n  startDrawing(event: MouseEvent) {\n    this.isDrawing = true;\n    this.lastX = event.clientX;\n    this.lastY = event.clientY;\n    console.log(\"start drawing\");\n  }\n\n  draw(event: MouseEvent) {\n   \n    if (!this.isDrawing) {\n      return;\n    }\n    if(this.ctx){\n      console.log(\" drawing\");\n      this.ctx.strokeStyle = this.color;\n      this.ctx.fillStyle=this.color;\n      this.ctx.lineWidth = 13;\n      this.ctx.beginPath();  \n      console.log(this.lastX+\",\"+this.lastY);\n      this.ctx.moveTo(this.lastX, this.lastY);\n      this.ctx.lineTo(event.clientX, event.clientY);\n      this.ctx.stroke();\n    }\n    this.lastX = event.clientX;\n    this.lastY = event.clientY;\n  }\n\n  stopDrawing() {\n    console.log(\"stop drawing\");\n    this.isDrawing = false;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}