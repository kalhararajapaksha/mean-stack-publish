{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction SquareComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function SquareComponent_div_8_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.clickOnSeat(i_r2));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", i_r2)(\"ngStyle\", i0.ɵɵpureFunction1(2, _c0, ctx_r0.backgroundColor));\n  }\n}\nexport class SquareComponent {}\nSquareComponent.ɵfac = function SquareComponent_Factory(t) {\n  return new (t || SquareComponent)();\n};\nSquareComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SquareComponent,\n  selectors: [[\"app-square\"]],\n  decls: 10,\n  vars: 2,\n  consts: [[\"id\", \"btnCreate\", 3, \"click\"], [\"id\", \"btnJoin\", 3, \"click\"], [\"type\", \"text\", \"id\", \"txtGameId\", 3, \"formControl\"], [\"id\", \"divPlayers\"], [\"id\", \"left-hand\", 1, \"left-hand\"], [4, \"ngFor\", \"ngForOf\"], [1, \"square\", 3, \"id\", \"ngStyle\", \"click\"]],\n  template: function SquareComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function SquareComponent_Template_button_click_0_listener() {\n        return ctx.send();\n      });\n      i0.ɵɵtext(1, \"New Game\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function SquareComponent_Template_button_click_2_listener() {\n        return ctx.join();\n      });\n      i0.ɵɵtext(3, \"Join Game\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2)(5, \"div\", 3);\n      i0.ɵɵelementStart(6, \"div\")(7, \"div\", 4);\n      i0.ɵɵtemplate(8, SquareComponent_div_8_Template, 2, 4, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"div\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formControl\", ctx.nameControl);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgStyle, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective],\n  styles: [\".square[_ngcontent-%COMP%] {\\r\\n    width: 100px;\\r\\n    height: 100px;\\r\\n    margin-top: 10px;\\r\\n    margin-right: 10px;\\r\\n    float: right;\\r\\n    border-style: groove;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2VhdC1vcmRlci9zcXVhcmUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osb0JBQW9CO0VBQ3RCIiwic291cmNlc0NvbnRlbnQiOlsiLnNxdWFyZSB7XHJcbiAgICB3aWR0aDogMTAwcHg7XHJcbiAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIGJvcmRlci1zdHlsZTogZ3Jvb3ZlO1xyXG4gIH1cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;IAMKA,2BAA8C;IACXA;MAAA;MAAA;MAAA;MAAA,OAASA,uCAAc;IAAA,EAAC;IAAmDA,iBAAM;;;;;IAA1GA,eAAQ;IAARA,yBAAQ;;;ACGvB,OAAM,MAAOC,eAAe;AAAfA,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV5BN,iCAA0C;MAAjBA;QAAA,OAASO,UAAM;MAAA,EAAC;MAACP,wBAAQ;MAAAA,iBAAS;MAC3DA,iCAAwC;MAAjBA;QAAA,OAASO,UAAM;MAAA,EAAC;MAACP,yBAAS;MAAAA,iBAAS;MAC1DA,2BAAkE;MAElEA,2BAAK;MAEAA,gEAEM;MACXA,iBAAM;MACNA,sBAAK;MANLA,iBAAK;;;MAFgBA,eAA2B;MAA3BA,6CAA2B;MAInBA,eAAS;MAATA,mCAAS","names":["i0","SquareComponent","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\KASUN\\NSBM 3rd Year\\FullStackDev\\mean-stack-publish\\mean-stack-publish\\mean-stack-example\\client\\src\\app\\seat-order\\seat-order.component.html","D:\\KASUN\\NSBM 3rd Year\\FullStackDev\\mean-stack-publish\\mean-stack-publish\\mean-stack-example\\client\\src\\app\\seat-order\\seat-order.component.ts"],"sourcesContent":["<button id = 'btnCreate' (click)=\"send()\">New Game</button>\r\n<button id = 'btnJoin' (click)=\"join()\">Join Game</button>\r\n<input type = 'text' [formControl]=\"nameControl\" id = 'txtGameId'>\r\n<div id  = 'divPlayers'></div>\r\n<div>\r\n<div id ='left-hand' class=\"left-hand\">\r\n     <div   *ngFor=\"let item of items;let i=index\">\r\n          <div [id]=\"i\" class='square'  (click)=\"clickOnSeat(i)\" [ngStyle]=\"{'background-color': backgroundColor}\"></div>\r\n     </div>                 \r\n</div>\r\n<div>","import { Component, Renderer2, ElementRef, AfterViewInit } from '@angular/core';\nimport { TestService } from '../test.service';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-square',\n  templateUrl: './seat-order.component.html',\n  styleUrls: ['square.component.css']\n})\nexport class SquareComponent implements AfterViewInit,{\n  nameControl = new FormControl('');\n  items =Array.from(Array(10).keys());\n  //<div class=\"square\" *ngFor=\"let square of squares\"></div>\n  // You can use properties and methods here to keep track of the state of the square\n   private clientID=\"\";\n   private GameID=\"\";\n   private playerColor=\"\";\n   private game=null;\n   backgroundColor: string = 'white';\n\n   constructor(private wsService: TestService,private renderer: Renderer2, private el: ElementRef) {\n    this.items=Array.from(Array(0).keys());\n    this.wsService.receive().subscribe(message => {\n      if(message.method==\"connect\"){\n\n        this.clientID=message.clientId;\n        console.log(\"Connected\");\n        console.log(message.clientId);\n        //this.send();\n      };\n      if(message.method==\"create\"){\n        this.GameID=message.game.id;\n        console.log(\"New Game Created\");       \n        console.log(message.game);\n        this.join();\n      };\n      if(message.method==\"join\"){\n        this.GameID=message.game.id;\n        this.game=message.game.clients;\n        console.log(\"You joined Successfully\");\n        console.log(message.game);\n        message.game.clients.forEach((num: any) => {\n          console.log(this.clientID);\n\n          if(num.clientId==this.clientID){\n            this.items =Array.from(Array(message.game.balls).keys());\n            console.log(num);\n            this.playerColor=num.color\n            console.log(this.playerColor);\n           // this.backgroundColor=this.playerColor;\n          }\n        });\n\n      };\n      if(message.method==\"update\"){\n        console.log(message);\n        console.log(\"Game state updated\");\n        if (!message.game.state) return;\n        Object.entries(message.game.state).forEach(([key, value]) => {\n          console.log(`${key}: ${value}`);\n          this.changeColor(key,value);\n        });\n\n\n      };\n    });\n  }\n  ngAfterViewInit() {\n    console.log('View has been initialized');\n    // Do additional setup here\n  }\n\n  send() {\n    const payLoad = {\n      method: 'create',\n      clientId: this.clientID,\n    };\n    this.wsService.send(payLoad);\n  }\n\n  join() {\n\n    const payLoad = {\n      method: 'join',\n      clientId: this.clientID,\n      gameId:this.nameControl.value,\n    };\n    this.wsService.send(payLoad);\n  }\n\n  clickOnSeat(data: any) {\n\n    const payLoad = {\n      method: 'play',\n      clientId: this.clientID,\n      gameId:this.nameControl.value,\n      ballId:data,\n      color:this.playerColor\n    };\n    this.wsService.send(payLoad);\n  }\n\n  changeColor(i: any,color: any) {\n    //this.backgroundColor = color;\n    const div = document.getElementById(i);\n    this.renderer.setStyle(div, 'background-color', color);\n    //this.renderer.setStyle(this.el.nativeElement.querySelector(`#${i}`), 'background-color', this.backgroundColor);\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}